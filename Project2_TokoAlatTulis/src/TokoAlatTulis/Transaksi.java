/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TokoAlatTulis;

import TokoAlatTulis.DatabaseKoneksi.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Arnella
 */
public class Transaksi extends javax.swing.JFrame {

    /**
     * Creates new form Transaksi
     */
    public Transaksi() {
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        noTransaksi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomorHP = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        textTanggal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        CariMember = new javax.swing.JButton();
        member = new javax.swing.JRadioButton();
        nonMember = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        kodeBarang = new javax.swing.JTextField();
        cariBarang = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        namaBarang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        stok = new javax.swing.JTextField();
        hargaSatuan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jumlahJual = new javax.swing.JTextField();
        hargaAkhir = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        baru = new javax.swing.JButton();
        bayar = new javax.swing.JButton();
        kembali = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        uang = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtTotal = new javax.swing.JLabel();
        tagihan = new javax.swing.JLabel();
        kembali1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setSize(new java.awt.Dimension(1366, 768));

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        panel2.setBackground(new java.awt.Color(255, 204, 102));
        panel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel2.setForeground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("No. Transaksi");

        noTransaksi.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        noTransaksi.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nama");

        nomorHP.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        nomorHP.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Tanggal");

        textTanggal.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        textTanggal.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Nomor HP");

        nama.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        nama.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        CariMember.setBackground(new java.awt.Color(255, 102, 0));
        CariMember.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        CariMember.setForeground(new java.awt.Color(255, 255, 153));
        CariMember.setText("Cari");
        CariMember.setAlignmentY(0.0F);
        CariMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CariMemberActionPerformed(evt);
            }
        });

        buttonGroup1.add(member);
        member.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        member.setForeground(new java.awt.Color(0, 0, 0));
        member.setText("Member");
        member.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberActionPerformed(evt);
            }
        });

        buttonGroup1.add(nonMember);
        nonMember.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        nonMember.setForeground(new java.awt.Color(0, 0, 0));
        nonMember.setText("Non-Member");
        nonMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonMemberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(12, 12, 12)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(nomorHP, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(nama, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(noTransaksi, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(textTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CariMember, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(member, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(nonMember)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(noTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(member)
                            .addComponent(nonMember))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nomorHP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CariMember, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))))
        );

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Kode Barang");

        kodeBarang.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        kodeBarang.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cariBarang.setBackground(new java.awt.Color(255, 102, 0));
        cariBarang.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        cariBarang.setForeground(new java.awt.Color(255, 255, 153));
        cariBarang.setText("Cari Barang");
        cariBarang.setAlignmentY(0.0F);
        cariBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariBarangActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Nama Barang");

        namaBarang.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        namaBarang.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Stok");

        stok.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        stok.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        hargaSatuan.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        hargaSatuan.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Harga Satuan");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Jumlah Jual");

        jumlahJual.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jumlahJual.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jumlahJual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahJualActionPerformed(evt);
            }
        });

        hargaAkhir.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        hargaAkhir.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hargaAkhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaAkhirActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Harga Akhir");

        submit.setBackground(new java.awt.Color(255, 102, 0));
        submit.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 153));
        submit.setText("Submit");
        submit.setAlignmentY(0.0F);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        batal.setBackground(new java.awt.Color(255, 102, 0));
        batal.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        batal.setForeground(new java.awt.Color(255, 255, 153));
        batal.setText("Batal");
        batal.setAlignmentY(0.0F);
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });

        tabelTransaksi.setBackground(new java.awt.Color(255, 255, 153));
        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Nama Barang", "Stok", "Harga Satuan", "Jumlah", "Total Harga"
            }
        ));
        jScrollPane1.setViewportView(tabelTransaksi);
        if (tabelTransaksi.getColumnModel().getColumnCount() > 0) {
            tabelTransaksi.getColumnModel().getColumn(2).setResizable(false);
        }

        baru.setBackground(new java.awt.Color(255, 102, 0));
        baru.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        baru.setForeground(new java.awt.Color(255, 255, 153));
        baru.setText("Baru");
        baru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baruActionPerformed(evt);
            }
        });

        bayar.setBackground(new java.awt.Color(255, 102, 0));
        bayar.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        bayar.setForeground(new java.awt.Color(255, 255, 153));
        bayar.setText("Bayar");
        bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });

        kembali.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        kembali.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Kembali :");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Uang      :");

        uang.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        uang.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jPanel2.setBackground(new java.awt.Color(255, 255, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTotal.setBackground(new java.awt.Color(0, 0, 0));
        txtTotal.setFont(new java.awt.Font("Bahnschrift", 0, 32)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(0, 0, 0));
        txtTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtTotal.setText("Rp.0.0");

        tagihan.setBackground(new java.awt.Color(0, 0, 0));
        tagihan.setFont(new java.awt.Font("Bahnschrift", 0, 36)); // NOI18N
        tagihan.setForeground(new java.awt.Color(0, 0, 0));
        tagihan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tagihan.setText("Tagihan : ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tagihan, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tagihan, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(baru, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGap(24, 24, 24)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uang, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(kodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(68, 68, 68)
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(100, 100, 100)
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(stok, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(jLabel5))
                                .addGap(100, 100, 100)
                                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hargaSatuan, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(jLabel6)))
                            .addComponent(cariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jumlahJual, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hargaAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(25, 25, 25))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(kodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hargaSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cariBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel2Layout.createSequentialGroup()
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jumlahJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hargaAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(batal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(baru, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel2Layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(uang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panel2Layout.createSequentialGroup()
                                    .addGap(13, 13, 13)
                                    .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel2Layout.createSequentialGroup()
                                    .addGap(8, 8, 8)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        kembali1.setBackground(new java.awt.Color(255, 102, 0));
        kembali1.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        kembali1.setForeground(new java.awt.Color(255, 255, 153));
        kembali1.setText("Kembali");
        kembali1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembali1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kembali1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kembali1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        kodeBarang.setText("");
        namaBarang.setText("");
        stok.setText("");
        hargaSatuan.setText("");
        jumlahJual.setText("");
        hargaAkhir.setText("");
    }//GEN-LAST:event_batalActionPerformed
    
    private double totalHarga = 0;
    double diskon = 0.0;
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        try {
            double hargaSatuanValue = Double.parseDouble(hargaSatuan.getText());
            int jumlahJualValue = Integer.parseInt(jumlahJual.getText());

            double subTotal = hargaSatuanValue * jumlahJualValue;
            totalHarga += subTotal;

            // Simpan data transaksi ke dalam database
            saveTransactionToDatabase();

            // Tampilkan tagihan pada text field atau label yang sesuai
            
            if (member.isSelected()) {
                // Jika member, berikan diskon 10%
                diskon = totalHarga * 0.1;
                totalHarga -= diskon;
            }

            // Format nilai totalHarga ke dalam format mata uang Indonesia
            NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
            String formattedTotal = formatter.format(totalHarga);

            // Tampilkan tagihan pada text field atau label yang sesuai
            if (diskon > 0) {
                txtTotal.setText(formattedTotal + " (Diskon 10%)");
            } else {
                txtTotal.setText(formattedTotal);
            }
            updateTotalHargaFromDatabase();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid.");
        }
    }//GEN-LAST:event_submitActionPerformed

    private void saveTransactionToDatabase() {
        try {
            Connection koneksi = DatabaseConnection.getConnection();

            // Simpan data transaksi ke dalam database
            String query = "INSERT INTO transaksi (kode_barang, nama_barang, stok, harga_satuan, jumlah, total_harga) VALUES (?, ?, ?, ?, ?, ?)";
            try (PreparedStatement preparedStatement = koneksi.prepareStatement(query)) {
                
                preparedStatement.setString(1, kodeBarang.getText());
                preparedStatement.setString(2, namaBarang.getText());
                preparedStatement.setString(3, stok.getText());
                preparedStatement.setString(4, hargaSatuan.getText());
                preparedStatement.setString(5, jumlahJual.getText());
                preparedStatement.setDouble(6, totalHarga);

                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    // Update stok_barang di database barang
                    int stokSekarang = getStokFromDatabase(kodeBarang.getText());
                    int jumlahJualValue = Integer.parseInt(jumlahJual.getText());
                    int newStok = stokSekarang - jumlahJualValue;

                    updateStokInDatabase(kodeBarang.getText(), newStok);

                    JOptionPane.showMessageDialog(this, "Data berhasil dimasukkan ke database", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                    updateTable();

                    kodeBarang.setText("");
                    namaBarang.setText("");
                    stok.setText("");
                    hargaSatuan.setText("");
                    jumlahJual.setText("");
                    hargaAkhir.setText("");

                    preparedStatement.close();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal memasukkan data ke database", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke database.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private int getStokFromDatabase(String kodeBarang) throws SQLException, ClassNotFoundException {
        Connection koneksi = DatabaseConnection.getConnection();
        String query = "SELECT stok_barang FROM barang WHERE kode_barang=?";
        try (PreparedStatement preparedStatement = koneksi.prepareStatement(query)) {
            preparedStatement.setString(1, kodeBarang);
            try (ResultSet resultSet = preparedStatement.executeQuery()) {
                int stok = 0;
                if (resultSet.next()) {
                    stok = resultSet.getInt("stok_barang");
                }
                return stok;
            }
        }
    }
    
    private void updateStokInDatabase(String kodeBarang, int newStok) throws SQLException, ClassNotFoundException {
        Connection koneksi = DatabaseConnection.getConnection();
        String query = "UPDATE barang SET stok_barang=? WHERE kode_barang=?";
        try (PreparedStatement preparedStatement = koneksi.prepareStatement(query)) {
            preparedStatement.setInt(1, newStok);
            preparedStatement.setString(2, kodeBarang);
            preparedStatement.executeUpdate();
        }
    }
    
    private void updateTotalHargaFromDatabase() {
        try {
            Connection koneksi = DatabaseConnection.getConnection();
            String query = "SELECT SUM(total_harga) AS total FROM transaksi";
            PreparedStatement preparedStatement = koneksi.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                double totalHarga = resultSet.getDouble("total");

                // Format nilai totalHarga ke dalam format mata uang Indonesia
                NumberFormat formatter = NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
                String formattedTotal1 = formatter.format(totalHarga);

                // Tampilkan totalHarga pada text field atau label yang sesuai
                // Cek apakah member terpilih
                if (member.isSelected()) {
                    formattedTotal1 = formatter.format(totalHarga) + " (Diskon 10%: " + formatter.format(diskon) + ")";
                } else {
                    formattedTotal1 = formatter.format(totalHarga);
                }
            }

            preparedStatement.close();
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }
    
     private void updateTable() {
        try {
            Connection koneksi = DatabaseConnection.getConnection();
            String query = "SELECT * FROM transaksi";
            PreparedStatement preparedStatement = koneksi.prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tabelTransaksi.getModel();
            model.setRowCount(0); 

            while (resultSet.next()) {
                Object[] row = {
                        resultSet.getString("kode_barang"),
                        resultSet.getString("nama_barang"),
                        resultSet.getString("stok"),
                        resultSet.getString("harga_satuan"),
                        resultSet.getString("jumlah"),
                        resultSet.getString("total_harga")
                };
                model.addRow(row);
            }
            updateTotalHargaFromDatabase();
            preparedStatement.close();
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }
    
    private void baruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baruActionPerformed
        simpanDataKeDatabase();
        clearTransaksiTable();
    }//GEN-LAST:event_baruActionPerformed

    private void clearTransaksiTable() {
        try {
            Connection koneksi = DatabaseConnection.getConnection();
            String query = "DELETE FROM transaksi";
            PreparedStatement preparedStatement = koneksi.prepareStatement(query);

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data transaksi berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menghapus data transaksi", "Error", JOptionPane.ERROR_MESSAGE);
            }

            preparedStatement.close();
        } catch (SQLException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }
    
    private void hargaAkhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaAkhirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaAkhirActionPerformed

    private void bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarActionPerformed
        try {
            double uangValue = Double.parseDouble(uang.getText());

            if (uangValue < totalHarga) {
                JOptionPane.showMessageDialog(this, "Uang yang dimasukkan kurang.");
            } else {
                // Hitung kembalian
                double kembaliValue = uangValue - totalHarga;

                // Simpan data ke dalam tabel laporan_transaksi
                saveToLaporanTransaksi();

                // Tampilkan kembalian
                kembali.setText(String.valueOf(kembaliValue));

                JOptionPane.showMessageDialog(this, "Pembayaran berhasil.", "Sukses", JOptionPane.INFORMATION_MESSAGE);

                // Kosongkan input setelah pembayaran
                batalActionPerformed(evt);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan angka yang valid.");
        }
    }//GEN-LAST:event_bayarActionPerformed

    private void saveToLaporanTransaksi() {
    try {
        Connection koneksi = DatabaseConnection.getConnection();

        // Ambil data dari tabel transaksi
        String queryTransaksi = "SELECT * FROM transaksi";
        PreparedStatement preparedStatementTransaksi = koneksi.prepareStatement(queryTransaksi);
        ResultSet resultSetTransaksi = preparedStatementTransaksi.executeQuery();

        // Simpan data ke dalam tabel laporan_transaksi
        String queryLaporanTransaksi = "UPDATE laporan_transaksi SET tanggal = ?, kode_barang = ?, nama_barang = ?, stok = ?, harga_satuan = ?, jumlah = ?, total_harga = ? WHERE no_transaksi = ?";
        try (PreparedStatement preparedStatementLaporanTransaksi = koneksi.prepareStatement(queryLaporanTransaksi)) {
            while (resultSetTransaksi.next()) {
                preparedStatementLaporanTransaksi.setString(1, noTransaksi.getText());
                preparedStatementLaporanTransaksi.setDate(2, java.sql.Date.valueOf(textTanggal.getText()));
                preparedStatementLaporanTransaksi.setString(3, resultSetTransaksi.getString("kode_barang"));
                preparedStatementLaporanTransaksi.setString(4, resultSetTransaksi.getString("nama_barang"));
                preparedStatementLaporanTransaksi.setString(5, resultSetTransaksi.getString("stok"));
                preparedStatementLaporanTransaksi.setString(6, resultSetTransaksi.getString("harga_satuan"));
                preparedStatementLaporanTransaksi.setString(7, resultSetTransaksi.getString("jumlah"));
                preparedStatementLaporanTransaksi.setString(8, resultSetTransaksi.getString("total_harga"));

                preparedStatementLaporanTransaksi.executeUpdate();
            }
        }

        preparedStatementTransaksi.close();
    } catch (SQLException | ClassNotFoundException ex) {
        ex.printStackTrace();
    }
}
    
    private void memberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memberActionPerformed

    private void nonMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nonMemberActionPerformed

    private void jumlahJualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahJualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahJualActionPerformed

    private void kembali1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembali1ActionPerformed
        String Menu = "Menu"; 
        switchToFrame(Menu);
    }//GEN-LAST:event_kembali1ActionPerformed

    private void CariMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CariMemberActionPerformed
        cariMemberByNomorHP();
    }//GEN-LAST:event_CariMemberActionPerformed

    private void cariBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariBarangActionPerformed
         try {
            Connection koneksi = DatabaseConnection.getConnection();

            String query = "SELECT * FROM barang WHERE kode_barang=?";
            PreparedStatement preparedStatement = koneksi.prepareStatement(query);

            preparedStatement.setString(1, kodeBarang.getText());

            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                namaBarang.setText(resultSet.getString("nama_barang"));
                stok.setText(resultSet.getString("stok_barang"));
                hargaSatuan.setText(resultSet.getString("harga_barang"));

                JOptionPane.showMessageDialog(this, "Data ditemukan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }

            preparedStatement.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cariBarangActionPerformed

    private void cariMemberByNomorHP() {
       try {
            Connection koneksi = DatabaseConnection.getConnection();

            String sql = "SELECT nama FROM member WHERE no_hp = ?";

            try (PreparedStatement statement = koneksi.prepareStatement(sql)) {
                // Menggantilah '?' dengan nilai sesuai dengan data yang ingin dicari
                statement.setString(1, nomorHP.getText());

                // Eksekusi query
                ResultSet resultSet = statement.executeQuery();

                if (resultSet.next()) {
                    // Jika data ditemukan, tampilkan hasilnya di textfield atau komponen GUI yang sesuai
                    String namaMember = resultSet.getString("nama");
                    nama.setText(namaMember);
                    member.setSelected(true);
                    // Tambahan: Anda mungkin ingin menampilkan informasi lainnya jika diperlukan
                } else {
                    // Jika data tidak ditemukan, kosongkan textfield atau komponen GUI yang sesuai
                    nama.setText("");
                    JOptionPane.showMessageDialog(this, "Member tidak ditemukan.");
                }
            }
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void switchToFrame(String frameName) {
        try {
            this.dispose(); 
            if (frameName.equals("Menu")) { 
                Menu menu = new Menu();
                menu.setVisible(true);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
     private void simpanDataKeDatabase() {
           try {
            // Menggunakan singleton untuk mendapatkan koneksi
            Connection koneksi = DatabaseConnection.getConnection();

            // Mengambil ID transaksi terakhir dari database untuk menentukan counter
            int counter = getLastTransactionId(koneksi) + 1;

            // Format ID transaksi: TahunBulanHariJamMenitDetikCounter
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
            String formattedDate = dateFormat.format(new Date());
            String transactionId = formattedDate + counter;

            // Mengambil tanggal saat ini
            LocalDate currentDate = LocalDate.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            String formattedDateNow = currentDate.format(formatter);

            // Query SQL untuk menyimpan ID transaksi dan tanggal ke dalam database
            String sql = "INSERT INTO laporan_transaksi (no_transaksi, tanggal) VALUES (?, ?)";

            try (PreparedStatement statement = koneksi.prepareStatement(sql)) {
                // Menggantilah '?' dengan nilai sesuai dengan data yang ingin dimasukkan
                statement.setString(1, transactionId);
                statement.setDate(2, java.sql.Date.valueOf(formattedDateNow));

                // Eksekusi query
                statement.executeUpdate();

                // Set ID transaksi pada JTextField
                noTransaksi.setText(transactionId);

                // Set Tanggal pada JTextField
                textTanggal.setText(formattedDateNow);

                JOptionPane.showMessageDialog(this, "ID transaksi dan tanggal disimpan ke database.",
                        "Sukses", JOptionPane.INFORMATION_MESSAGE);
            }


        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data ke database.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Transaksi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private int getLastTransactionId(Connection connection) throws SQLException {
        // Query SQL untuk mendapatkan ID transaksi terakhir dari database
        String sql = "SELECT MAX(CAST(SUBSTRING(no_transaksi, 15) AS SIGNED)) AS last_id FROM laporan_transaksi";

        try (PreparedStatement statement = connection.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getInt("last_id");
            } else {
                return 0;
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CariMember;
    private javax.swing.JButton baru;
    private javax.swing.JButton batal;
    private javax.swing.JButton bayar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cariBarang;
    private javax.swing.JTextField hargaAkhir;
    private javax.swing.JTextField hargaSatuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jumlahJual;
    private javax.swing.JTextField kembali;
    private javax.swing.JButton kembali1;
    private javax.swing.JTextField kodeBarang;
    private javax.swing.JRadioButton member;
    private javax.swing.JTextField nama;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JTextField noTransaksi;
    private javax.swing.JTextField nomorHP;
    private javax.swing.JRadioButton nonMember;
    private javax.swing.JPanel panel2;
    private javax.swing.JTextField stok;
    private javax.swing.JButton submit;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JLabel tagihan;
    private javax.swing.JTextField textTanggal;
    private javax.swing.JLabel txtTotal;
    private javax.swing.JTextField uang;
    // End of variables declaration//GEN-END:variables
}
